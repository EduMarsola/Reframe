resquest : mantem as informações da requisição
response : recebe as informações da resposta
    .write(string texto) -> escreve o texto na página
    .end() -> finaliza a requisição


server = createServer ((request, response) => {função})
    recebe o request e response e passa a função a ser execultada
    .listen(int porta) -> execulta a API quando a porta for chamada ex: .listen(3333) || localhost:3333



package.json : configurações do node, cria de fabrica ao usar npm node 
    "dev" : "node --watch --no-warnings server.js" -> cria uma execulção do código ao usar "npm run dev" no terminal



comandos de terminal
    node arquivo.ext -> execulta o arquivo
        --watch -> ao salvar o arquivo já atualiza na página
    npm install "" -> intala a dependencia pelo gerenciador de pacotes



fastify : microframework do node
    npm intall fastify -> instala no projeto
        cria os arquivos "node_modules" e "package-lock.json"


http
    .get : pega o registro
    .post : cria o registro
    .put : alteração de tudo
    .patch : alteração especifica
    .delete : deleta o registro
    pode ser usado a mesma rota com o comando diferente
        server.post('/video', () => {})
        server.get('/video', () => {})
        server.put('/video/:id')
        server.delete('/video/:id', () => {})
        //Route parameter ':id' adiciona como parametro de busca
